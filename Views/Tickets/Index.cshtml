@model IEnumerable<JATS.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using JATS.Models.Enums
@using JATS.Services.Interfaces
@using JATS.Extensions
@inject UserManager<JTUser> UserManager
@inject IProjectService ProjectService

@{
    ViewData["Title"] = "All Tickets";
    JTUser user = await UserManager.GetUserAsync(User);
}

<h1>All Ticketss</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TechnicianUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TechnicianUser.FullName)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |

                @if (User.IsInRole(nameof(Roles.Admin)) || 
                item.TechnicianUserId == user.Id ||
                item.OwnerUserId == user.Id ||
                   (await ProjectService.IsAssignedProjectManager(user.Id, item.ProjectId))) 
                    {
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>


                @if (item.Archived == true)
                {
                    <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                }
                        else
                        {
                            <a asp-action="ArchiveTicket" asp-route-id="@item.Id">Archive</a>
                        }

                }
            </td>
        </tr>
}
    </tbody>
</table>
