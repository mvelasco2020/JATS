@using JATS.Models.Enums;
@using Microsoft.AspNetCore.Identity
@model IEnumerable<JATS.Models.Project>
@inject JATS.Services.Interfaces.IProjectService ProjectService
@inject UserManager<JTUser> UserManager

@{
    ViewData["Title"] = "Projects";
}


<div class="card">
    <div class="card-header p-0 mx-3 mt-3 position-relative z-index-1">
        <h6 class="h5">All Company Projects</h6>
    </div>
    <div class="table-responsive">
        <table class="table align-items-center mb-0" id="datatable">
            <thead>
                <tr>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Project</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Budget</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Priority</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Completion</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var project in Model)
                {

                    <tr>
                        <td>
                            <div class="d-flex px-2">
                                <div>
                                    <img src="https://demos.creative-tim.com/soft-ui-design-system-pro/assets/img/logos/small-logos/logo-spotify.svg" class="avatar avatar-sm rounded-circle me-2">
                                </div>
                                <div class="my-auto">
                                    <h6 class="mb-0 text-xs">@project.Name</h6>
                                </div>
                            </div>
                        </td>
                        <td>
                            <p class="text-xs font-weight-bold mb-0">$2,500</p>
                        </td>
                        <td>
                            <span class="badge badge-dot me-4">
                                @switch (project.ProjectPriority.Name)
                                {
                                    case ("High"):
                                        <i class="bg-warning"></i>
                                        break;
                                    case ("Urgent"):
                                        <i class="bg-danger"></i>
                                        break;
                                    case ("Medium"):
                                        <i class="bg-success"></i>
                                        break;

                                    default:
                                        <i class="bg-info"></i>
                                        break;

                                }
                                <span class="text-dark text-xs">@project.ProjectPriority.Name</span>
                            </span>
                        </td>
                        <td class="align-middle text-center">
                            <div class="d-flex align-items-center">
                                <span class="me-2 text-xs">60%</span>
                                <div>
                                    <div class="progress">
                                        @{
                                            double value;
                                            if (project.StartDate > DateTimeOffset.UtcNow)
                                                value = 0;

                                            else if (project.EndDate < DateTime.Now)
                                                value = 100;
                                            else
                                            {
                                                value = Math
                                                .Round((DateTime.Now.Subtract(project.StartDate.DateTime))
                                                / (project.EndDate.DateTime.Subtract(project.StartDate.DateTime))
                                                * 100);
                                            }


                                        }
                                        <div class="progress-bar bg-info" role="progressbar" aria-valuenow=@value aria-valuemin="0" aria-valuemax="100" style="width: 60%;"></div>
                                    </div>
                                </div>
                            </div>
                        </td>

                        <td class="align-middle">
                            <button class="btn btn-link text-secondary mb-0">
                                <i class="fa fa-ellipsis-v text-xs" aria-hidden="true"></i>
                            </button>
                        </td>
                    </tr>
                }



            </tbody>
        </table>
    </div>
</div>
    @section scripts{
        <script>
      const dataTableBasic = new simpleDatatables.DataTable("#datatable", {
        searchable: true,
        fixedHeight: true
      });
    </script>
    }