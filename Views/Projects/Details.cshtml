@using JATS.Models.Enums
@using JATS.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using JATS.Extensions
@model JATS.Models.Project
@inject UserManager<JTUser> UserManager
@inject IProjectService ProjectService
@inject ITicketHistoryService TicketHistoryService

@{
    ViewData["Title"] = "Details";
    JTUser user = await UserManager.GetUserAsync(User);
    JTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
    int archivedTicketsCount = Model.Tickets.Where(t => t.Archived == true).Count();
    int newTicketsCount = Model.Tickets.Where(t => t.TicketStatus.Name == TicketStatusEnum.New.ToString()).Count();
    int inProgressTicketsCount = Model.Tickets.Where(t => t.TicketStatus.Name == TicketStatusEnum.InProgress.ToString()).Count();
    int testingTicketsCount = Model.Tickets.Where(t => t.TicketStatus.Name == TicketStatusEnum.Testing.ToString()).Count();
    int resolvedTicketsCount = Model.Tickets.Where(t => t.TicketStatus.Name == TicketStatusEnum.Resolved.ToString()).Count();

    int lowTicketsCount = Model.Tickets.Where(t => t.TicketPriority.Name == TicketPriorityEnum.Low.ToString()).Count();
    int highTicketsCount = Model.Tickets.Where(t => t.TicketPriority.Name == TicketPriorityEnum.High.ToString()).Count();
    int mediumTicketsCount = Model.Tickets.Where(t => t.TicketPriority.Name == TicketPriorityEnum.Medium.ToString()).Count();
    int urgentTicketsCount = Model.Tickets.Where(t => t.TicketPriority.Name == TicketPriorityEnum.Urgent.ToString()).Count();

    int enhancementTicketsCount = Model.Tickets.Where(t => t.TicketType.Name == TicketTypeEnum.Enhancement.ToString()).Count();
    int newDevelopmentTicketsCount = Model.Tickets.Where(t => t.TicketType.Name == TicketTypeEnum.NewDevelopment.ToString()).Count();
    int defectTicketsCount = Model.Tickets.Where(t => t.TicketType.Name == TicketTypeEnum.Defect.ToString()).Count();
    int changeRequestTicketsCount = Model.Tickets.Where(t => t.TicketType.Name == TicketTypeEnum.ChangeRequest.ToString()).Count();
    int workTaskTicketsCount = Model.Tickets.Where(t => t.TicketType.Name == TicketTypeEnum.WorkTask.ToString()).Count();
    int generalTaskTicketsCount = Model.Tickets.Where(t => t.TicketType.Name == TicketTypeEnum.GeneralTask.ToString()).Count();

    var projectTickets = Model.Tickets.Where(t => t.Archived == false);
    var ticketHistories = await TicketHistoryService.GetProjectTicketsHistoriesAsync(Model.Id, user.CompanyId);

    var projectMembers = @Model.Members;

}
<div class="container">

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    @*#### Project Details Section Start####*@
                    <div class="d-flex justify-content-between">
                        <h3>@Model.Name</h3>
                        @if (User.IsInRole(Roles.Admin.ToString())
                        || (user.Id == projectManager?.Id))
                        {
                            @if (!@Model.Archived)
                            {
                                
                            <a class="btn btn-outline-danger align-self-center btn-sm mb-0 ms-auto me-3"
                           data-bs-toggle="modal" data-bs-target="#modal_@Model.Id">
                                Archive
                            </a>
                            <div class="modal fade" id="modal_@Model.Id" tabindex="-1" role="dialog" aria-labelledby="modal-default" aria-hidden="true">
                                        <div class="modal-dialog modal- modal-dialog-centered modal-" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h6 class="modal-title" id="modal-title-default">Confirmation</h6>
                                                    <button type="button" class="btn-close text-dark" data-bs-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">×</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="text-center">
                                                        Are you sure you want to archive this project:
                                                    </div>
                                                    <div class="text-center">
                                                        @Model.Name
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <form asp-action="Archive">
                                                        <input type="hidden"
                                                           asp-for="@(new Project().Id)"
                                                           value="@Model.Id" />
                                                        <button type="submit"
                                                            class="btn bg-gradient-danger">
                                                            Archive
                                                        </button>
                                                    </form>
                                                    <button type="button" class="btn btn-link ml-auto" data-bs-dismiss="modal">Close</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                            <a class="btn btn-primary align-self-center btn-sm mb-0"
                           asp-action="edit"
                           asp-controller="Projects"
                           asp-route-id="@Model.Id">
                                Edit
                            </a>
                            }
                        }

                    </div>
                    <div class="row">
                        <div class="col-12 col-md-6 text-center">
                            @if (Model.ImageFileData != null)
                            {
                                <img class="border-radius-lg shadow-lg mx-auto"
                                 style="height:100%; object-fit:cover;max-height:450px;width:100%;"
                                 src="data:image/*;base64,@(Convert.ToBase64String(Model.ImageFileData))"
                                 alt="project image">
                            }
                            else
                            {

                                <img class="border-radius-lg shadow-lg mx-auto"
                                 style="height:100%; object-fit:cover;max-height:450px;width:100%;"
                                 src="https://www.cio.com/wp-content/uploads/2021/12/project_management-100536263-orig.jpg?quality=50&strip=all"
                                 alt="project image">
                            }
                        </div>
                        <div class="col-12 col-md-6 ps-4">
                            <h5>Project Details</h5>
                            @*## Badge Start ##*@
                            <div class="row ps-2">

                                @if (Model.Archived)
                                {
                                    <span class="badge badge-danger col-3 me-2">Archived</span>
                                }


                                @if (Model.EndDate > DateTime.Now
                                && DateTime.Now > Model.StartDate)
                                {
                                    <span class="badge badge-success col-3 me-2">Active</span>
                                }
                                else if (Model.EndDate < DateTime.Now)
                                {
                                    <span class="badge badge-info col-3 me-2">Completed</span>
                                }
                                else
                                {
                                    <span class="badge badge-warning col-3 me-2">Upcomming</span>
                                }

                                @if (Model.ProjectPriority.Name == "Urgent")
                                {
                                    <span class="badge badge-danger col-3">@Model.ProjectPriority.Name</span>

                                }
                                else if (Model.ProjectPriority.Name == "High")
                                {
                                    <span class="badge badge-warning col-3">@Model.ProjectPriority.Name</span>

                                }
                                else
                                {
                                    <span class="badge badge-secondary col-3">@Model.ProjectPriority.Name</span>

                                }
                            </div>
                            @*## Badge End ##*@

                            @*## Project Descriptions ##*@
                            <label class="mt-4">Description</label>
                            <p>
                                @Model.Description
                            </p>
                            <div class="row mt-2">
                                <div class="col-6 mt-lg-0 mt-2">
                                    <label>Start Date</label>
                                    @Model.StartDate.ToString("MM/dd/yyyy")
                                </div>
                                <div class="col-6 mt-lg-0 mt-2">
                                    <label>End Date</label>
                                    @Model.EndDate.ToString("MM/dd/yyyy")
                                </div>
                            </div>
                            <div class="row mt-3">
                                <h6>Project Manager</h6>
                                <div>
                                    @if (projectManager is not null)
                                    {
                                        <div class="d-flex">
                                            @if (projectManager.AvatarData is not null)
                                            {
                                                <img class="rounded-circle border border-primary"
                                             style="width:50p;height:50px;"
                                             src="data:image/*;base64,@Convert.ToBase64String(projectManager.AvatarData)" />
                                            }
                                            else
                                            {
                                                <img class="rounded-circle border border-primary"
                                             style="width:50p;height:50px;"
                                             src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" />

                                            }
                                            <div class="ms-3">
                                                <span>
                                                    @projectManager.FullName
                                                </span>
                                                <div style="font-size: .8rem;">@projectManager.Email</div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex mb-2">
                                            <img class="rounded-circle me-2 border border-primary"
                                             style="width:40p;height:40px;"
                                             src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" />
                                            <h6>Not Assigned</h6>
                                        </div>
                                        @if (User.IsInRole(Roles.Admin.ToString()))
                                        {
                                            <a class="btn btn-xs btn-primary"
                                       asp-action="AssignPm"
                                       asp-controller="Projects"
                                       asp-route-id="@Model.Id">
                                                Assign Project Manager
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                            @*## Team Members ##*@
                            <div class="row mt-4">
                                <div class="col-12">
                                    <h6>Project Members:</h6>
                                    <div class="d-flex overflow-auto">
                                        @if (User.IsInRole(Roles.Admin.ToString())
                                        || (user.Id == projectManager?.Id))
                                        {
                                            <div class="text-center">
                                                <a asp-action="AssignMembers"
                                               asp-controller="Projects"
                                               asp-route-id="@Model.Id"
                                               class="avatar border-1 rounded-circle bg-gradient-primary">
                                                    <i class="fas fa-plus text-white"></i>
                                                </a>
                                            </div>
                                        }
                                        @if (projectMembers.Count() > 1)
                                        {

                                            @foreach (var member in @projectMembers)
                                            {
                                                <div class="text-center ms-1">
                                                    <a href="javascript:;"
                                               class="avatar rounded-circle border border-primary">
                                                        @if (member?.AvatarData != null)
                                                        {
                                                            <img alt="Image placeholder"
                                                     class="p-1"
                                                     src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarData))" />
                                                        }
                                                        else
                                                        {
                                                            <img src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png"
                                                     alt="Image placeholder"
                                                     class="p-1" />
                                                        }



                                                    </a>
                                                    <p class="mb-0"
                                               style="font-size: .8rem;">@member.FirstName @member.LastName[0]</p>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="pt-2 ms-2">
                                                <p class="text-center">
                                                    No Members
                                                </p>
                                            </div>
                                        }
                                    </div>
                                </div>


                            </div>
                            @*## Project Descriptions End##*@
                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>
    @*## Charts Starts ##*@

    @if (projectTickets.Count() > 1)
    {
        <div class="row">
            <div class="col-sm-12 col-md-4 mt-4">
                <div class="card z-index-2">
                    <div class="card-header p-3 pb-0">
                        <h6>Ticket Status</h6>
                    </div>
                    <div class="card-body p-3">
                        <div class="chart">
                            <canvas id="statuspie-chart" class="chart-canvas" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12 col-md-4 mt-4">
                <div class="card z-index-2">
                    <div class="card-header p-3 pb-0">
                        <h6>Ticket Priority</h6>
                    </div>
                    <div class="card-body p-3">
                        <div class="chart">
                            <canvas id="prioritypie-chart" class="chart-canvas" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12 col-md-4 mt-4">
                <div class="card z-index-2">
                    <div class="card-header p-3 pb-0">
                        <h6>Ticket Type</h6>
                    </div>
                    <div class="card-body p-3">
                        <div class="chart">
                            <canvas id="typepie-chart" class="chart-canvas" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    @*## Charts End ##*@
    @*#### Project Details End####*@


    @*### Project Tickets Start ###*@
    <div class="row mt-4">
        <div class="col-12 col-md-8">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <h5 class="ms-3">Project Tickets</h5>
                        <a class="btn btn-primary btn-sm"
                           asp-controller="Tickets"
                           asp-action="Create">
                            New Ticket
                        </a>
                    </div>
                    <div class="table table-responsive">
                        <table class="table align-items-center mb-0" id="alldatatable">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                        title
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">
                                        technician
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">
                                        status
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">
                                        priority
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">
                                        action
                                    </th>
                                </tr>
                            </thead>
                            <tbody>


                                @if (projectTickets.Count() > 0)
                                {
                                    @foreach (var ticket in projectTickets)
                                    {
                                        <tr>
                                            <td>
                                                <a asp-action="Details"
                                           asp-controller="Tickets"
                                           asp-route-id="@ticket.Id">
                                                    @ticket.Title
                                                </a>
                                            </td>
                                            <td>
                                                @if (ticket.TechnicianUserId != null)
                                                {
                                                    @ticket.TechnicianUser?.FullName
                                                }
                                                else
                                                {
                                                    if (User.IsInRole(nameof(Roles.Admin))
                                                    || User.IsInRole(nameof(Roles.ProjectManager)))
                                                    {
                                                        <a asp-action="AssignTechnician"
                                           asp-controller="Tickets"
                                           asp-route-ticketId="@ticket.Id">
                                                            Assign Technician
                                                        </a>
                                                    }

                                                }
                                            </td>

                                            <td><span class="">@ticket.TicketStatus?.Name </span></td>
                                            <td><span class="">@ticket.TicketPriority?.Name </span></td>
                                            <td>
                                                <div class="align-middle">
                                                    <button class="btn btn-link text-secondary mb-0"
                                                    data-bs-toggle="dropdown">
                                                        <i class="fa fa-ellipsis-v text-xs" aria-hidden="true"></i>
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-lg-start px-2 py-3"
                                                aria-labelledby="navbarDropdownMenuLink2"
                                                data-popper-placement="left-start">
                                                        <li>
                                                            <a class="dropdown-item border-radius-md"
                                                       asp-controller="Tickets"
                                                       asp-action="Details"
                                                       asp-route-id="@ticket.Id">
                                                                Details
                                                            </a>
                                                        </li>
                                                        @if (User.IsInRole(nameof(Roles.Admin))
                                                       || (await ProjectService.IsUserOnProjectAsync(user.Id, @Model.Id))
                                                       || (await ProjectService.IsAssignedProjectManager(UserManager.GetUserId(User), Model.Id)))
                                                        {

                                                            <li>
                                                                <a class="dropdown-item border-radius-md"
                                                       asp-controller="Tickets"
                                                       asp-action="Edit"
                                                       asp-route-id="@ticket.Id">
                                                                    Edit
                                                                </a>
                                                            </li>

                                                            @if (User.IsInRole("Admin") || (projectManager?.Id == user.Id))
                                                            {
                                                                <li>
                                                                    <a class="dropdown-item border-radius-md text-danger cursor-pointer"
                                                       data-bs-toggle="modal"
                                                       data-bs-target="#modal_@ticket.Id">
                                                                        Archive
                                                                    </a>
                                                                </li>
                                                            }
                                                        }
                                                    </ul>
                                                    <div class="modal fade" id="modal_@ticket.Id"
                                                 tabindex="-1" role="dialog" aria-labelledby="modal-default"
                                                 aria-hidden="true">
                                                        <div class="modal-dialog modal- modal-dialog-centered modal-"
                                                     role="document">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h6 class="modal-title" id="modal-title-default">Confirmation</h6>
                                                                    <button type="button" class="btn-close text-dark"
                                                                    data-bs-dismiss="modal" aria-label="Close">
                                                                        <span aria-hidden="true">×</span>
                                                                    </button>
                                                                </div>
                                                                <div class="modal-body">
                                                                    <div class="text-center">
                                                                        Are you sure you want to archive this ticket?
                                                                    </div>
                                                                    <div class="text-center">
                                                                        @ticket.Title
                                                                    </div>
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <form asp-action="ArchiveTicket" asp-controller="Tickets">
                                                                        <input type="hidden"
                                                                       asp-for="@(new Ticket().Id)"
                                                                       value="@ticket.Id" />
                                                                        <button type="submit"
                                                                        class="btn bg-gradient-danger">
                                                                            Archive
                                                                        </button>
                                                                    </form>
                                                                    <button type="button" class="btn btn-link ml-auto"
                                                                    data-bs-dismiss="modal">
                                                                        Close
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-4 mt-sm-4 mt-4 mt-md-0">
            <div class="card">
                <div class="card-header pb-0">
                    <h6>Project Timeline</h6>
                </div>
                <div class="card-body pt-0 overflow-auto"
                     style="max-height: 1935px;">


                    @if (ticketHistories.Count == 0)
                    {
                        <div>
                            <p class="text-center">
                                No Data
                            </p>
                        </div>
                    }
                    else
                    {
                        <div class="timeline timeline-one-side" data-timeline-axis-style="dotted">

                            @foreach (var history in ticketHistories.OrderByDescending(h => h.Created))
                            {
                                <div class="timeline-block mb-3">
                                    <span class="timeline-step">
                                        <i class="ni ni-bell-55 text-success text-gradient"></i>
                                    </span>
                                    <div class="timeline-content">
                                        <h6 class="text-dark text-sm font-weight-bold mb-0">@history.NewValue</h6>
                                        <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">@history.Created.ToString("MM dd, yyyy") </p>
                                        <p class="text-sm mt-3 mb-2">
                                            @history.Description <br> <a>- By: @history.User.FullName</a>
                                        </p>
                                        <span class="badge badge-sm bg-gradient-success">@history.Property</span>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>
    @*### Project Tickets End ###*@
</div>


@section Scripts {

    <script>
        const ctxpriority = document.getElementById("prioritypie-chart").getContext("2d");
        new Chart(ctxpriority, {
            type: "pie",
            data: {
                labels: ['Low', 'Medium', 'High', 'Urgent'],
                datasets: [{
                    label: "Projects",
                    weight: 9,
                    cutout: 0,
                    tension: 0.9,
                    pointRadius: 2,
                    borderWidth: 2,
                    backgroundColor: ['#17c1e8', '#a8b8d8', '#3A416F', '#F13C59'],
                    data: [@lowTicketsCount, @mediumTicketsCount, @highTicketsCount, @urgentTicketsCount],
                    fill: false
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false,
                        }
                    },
                },
            },
        });
    </script>

    <script>
        const ctxstatus = document.getElementById("statuspie-chart").getContext("2d");
        new Chart(ctxstatus, {
            type: "pie",
            data: {
                labels: ['New', 'Inprogress', 'Testing', 'Resolved'],
                datasets: [{
                    label: "Projects",
                    weight: 9,
                    cutout: 0,
                    tension: 0.9,
                    pointRadius: 2,
                    borderWidth: 2,
                    backgroundColor: ['#64C2A6', '#E6F69D', '#FFD200', '#3FA0E4'],
                    data: [@newTicketsCount, @inProgressTicketsCount, @testingTicketsCount, @resolvedTicketsCount],
                    fill: false
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false,
                        }
                    },
                },
            },
        });

    </script>

    <script>
        const ctxtype = document.getElementById("typepie-chart").getContext("2d");
        new Chart(ctxtype, {
            type: "pie",
            data: {
                labels: ['New Development', 'Enhancement', 'Defect', 'Change Request', 'Work Task', 'General Task'],
                datasets: [{
                    label: "Projects",
                    weight: 9,
                    cutout: 0,
                    tension: 0.9,
                    pointRadius: 2,
                    borderWidth: 2,
                    backgroundColor: ['#EC6B56', '#47B39C', '#F13C59', '#a8b8d8', '#FFC154'],
                    data: [@newDevelopmentTicketsCount, @enhancementTicketsCount, @defectTicketsCount, @workTaskTicketsCount, @generalTaskTicketsCount],
                    fill: false
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                        },
                        ticks: {
                            display: false,
                        }
                    },
                },
            },
        });
    </script>


    <script>
        const dataTableBasic = new simpleDatatables.DataTable("#alldatatable", {
            searchable: true,
            columns: [
                { select: 2, sort: "asc" },],
            perPage: 25
        });
    </script>

}